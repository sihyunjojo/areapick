# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# 포트 변경해야함.
# networks 항목에 default를 정의하면, 도커 컴포즈는 기본적으로 모든 서비스 컨테이너를 이 네트워크에 자동으로 연결

# 방화벽이나 네트워크 설정에서 9092, 9093과 같은 포트가 열려 있는지 확인하세요. 이를 위해 telnet <broker-ip> 9093 명령을 사용해 포트가 열려 있는지 테스트해 볼 수 있습니다.
# /tmp/kraft-combined-logs 폴더 만들기
# 포트 변경을 포함하여 외부에서 접근을 차단

#  순차적으로 모든 브로커가 정상적으로 통신할 수 있도록 하기 위해서는 wait-for-it.sh 같은 대기 메커니즘이 안정성을 보장하는 데 도움이 됩니다.
# curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
# chmod +x wait-for-it.sh
# 도커허브 카프카 버전 확인

# 카프카의 컨트롤러를 선출해주는 포트는 외부에도 반드시 열려있어야해..?
version: '3.8'

networks:
  default:
    name: kafka_network
    external: false

volumes:
  kafka_1_data:
    driver: local
  kafka_2_data:
    driver: local
  kafka_3_data:
    driver: local

services:
  kafka-1:
    image: docker.io/bitnami/kafka:latest
    hostname: kafka-1
    container_name: kafka-1
    volumes:
      - "kafka_1_data:/bitnami/kafka"
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:8085'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-1:29092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:8085,2@kafka-2:8085,3@kafka-3:8085'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CLIENT_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 2
      KAFKA_LOG_DIR: '/tmp/kraft-combined-logs'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO,org.apache.kafka=DEBUG"
#    extra_hosts:
#      - "kafka-2:127.0.0.1"
#      - "kafka-3:127.0.0.1"



  kafka-2:
    image: docker.io/bitnami/kafka:latest
    hostname: kafka-2
    container_name: kafka-2
    volumes:
      - "kafka_2_data:/bitnami/kafka"
#    entrypoint: ["/wait-for-it.sh", "kafka-1:29092", "--", "docker-entrypoint.sh"]
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://0.0.0.0:39092,CONTROLLER://0.0.0.0:8085'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-2:39092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:8085,2@kafka-2:8085,3@kafka-3:8085'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_KRAFT_CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 2
      KAFKA_LOG_DIR: '/tmp/kraft-combined-logs'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO,org.apache.kafka=DEBUG"
#    extra_hosts:
#      - "kafka-1:127.0.0.1"
#      - "kafka-3:127.0.0.1"



  kafka-3:
    image: docker.io/bitnami/kafka:latest
    hostname: kafka-3
    container_name: kafka-3
    volumes:
      - "kafka_3_data:/bitnami/kafka"
#    entrypoint: ["/wait-for-it.sh", "kafka-2:39092", "--", "docker-entrypoint.sh"]
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://0.0.0.0:49092,CONTROLLER://0.0.0.0:8085'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-3:49092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:8085,2@kafka-2:8085,3@kafka-3:8085'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_KRAFT_CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 2
      KAFKA_LOG_DIR: '/tmp/kraft-combined-logs'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO,org.apache.kafka=DEBUG"
#    extra_hosts:
#      - "kafka-1:127.0.0.1"
#      - "kafka-2:127.0.0.1"


  KafkaWebUiService:
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    container_name: KafkaWebUiContainer
    ports:
      - '18080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME= Kraft-Cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:39092,kafka-3:49092
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true
      - KAFKA_CLUSTERS_0_METRICS_PORT=9999
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
